@model IEnumerable<Stilosoft.Model.Entities.Producto>

@{
    ViewData["Title"] = "Insumo";
}
<br />
<div class="container-fluid">
    <div class="row">
        <div class="col-md-10">
            <a asp-action="index" asp-controller="Proveedores" class="btn btn-primary btn-lg mr-md-4">Proveedores</a>
            <a asp-action="index" asp-controller="Producto" class="btn btn-secondary btn-lg mr-md-4">Insumos</a>
            <a asp-action="index" asp-controller="Compras" class="btn btn-primary btn-lg mr-md-4">Compras</a>
        </div>
    </div>
</div>
<hr>
<section class="content">
    <p>
        <a onclick="mostrarModalS('@Url.Action("CrearPro","Producto", "null", Context.Request.Scheme)', 'Crear Prodcuto')" class="btn btn-success"> Registrar insumo</a>
    </p>
    <table class="table" id="tabla">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Nombre)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Cantidad)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Precio)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Descripcion)
                </th>
                <th>
                    Imagen
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Estado)
                </th>
                <th>
                    Acciones
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Nombre)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Cantidad)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Precio)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Descripcion)
                </td>
                <td>
                    @if (item.RutaImagen != null)
                    {
                        //<img src="@("~/imagenes/" + item.RutaImagen)" asp-append-version="true" class="img-circle w-25 h-10" />-->
                        <a onclick="mostrarModalG('@Url.Action("mostrarInsumo", "Producto", new { rutaImagen = item.RutaImagen }, Context.Request.Scheme)', 'Imagen')" class="btn btn-secondary"><i class="fas fa-image"></i></a>
                    }
                </td>
                <td>
                    @if (item.Estado == true)
                    {
                        <form asp-action="EditarEstado" asp-route-id="@item.ProductoId">
                            <button type="submit"><i class="fas fa-toggle-on"></i></button>
                        </form>
                    }
                    else if (item.Estado == false)
                    {
                        <form asp-action="EditarEstado" asp-route-id="@item.ProductoId">
                            <button type="submit"><i class="fas fa-toggle-off"></i></button>
                        </form>
                    }
                </td>
                <td>
                    <a onclick="mostrarModalS('@Url.Action("EditarProducto","Producto", new {id = item.ProductoId}, Context.Request.Scheme)', 'Editar Prodcuto')" class="btn btn-dark"><i class="fas fa-pencil-alt"></i></a>
                    <!--<form asp-action="EliminarProducto" asp-route-id="@item.ProductoId" onclick="return  DeleteConfirm()" href="/Productos/index/@item.ProductoId" class="d-inline">
                        <button type="submit" class="btn btn-danger"><i class="fas fa-trash-alt" onclientclick="return confirm('¿Confirma eliminar Producto?');"></i></button>
                    </form>-->
                </td>
            </tr>
            }
        </tbody>
    </table>

</section>

@section Scripts{

    <script src="~/js/tabla.js"></script>
    <script src="~/js/modals.js"></script>
    <script>
        @if(TempData["Mensaje"] != null && TempData["Accion"].ToString().Equals("RegistrarProducto")) { <text>
                  alertify.alert('Guardar Producto', '@TempData["Mensaje"]', function () { alertify.success('Producto guardado'); });
                 </text>
        }
        @if (TempData["Mensaje"] != null && TempData["Accion"].ToString().Equals("Error"))
    {<text>
            alertify.alert('Error', '@TempData["Mensaje"]');
    </text>
}
        @if(TempData["Mensaje"] != null && TempData["Accion"].ToString().Equals("EditarProducto")) { <text>
        alertify.alert('Editar Producto', '@TempData["Mensaje"]', function () { alertify.success('Producto editado'); });
                 </text>
        }
        @if(TempData["Mensaje"] != null && TempData["Accion"].ToString().Equals("EliminarProducto")) { <text>
        alertify.alert('Eliminar Producto', '@TempData["Mensaje"]', function () { alertify.error('Prodcuto eliminado'); });
                 </text>
        }
         @if(TempData["Mensaje"] != null && TempData["Accion"].ToString().Equals("EditarEstado")) { <text>
        alertify.success('Estado cambiado correctamente.');
                 </text>
        }
    </script>
    <script type="text/javascript">
        function DeleteConfirm() {
            if (confirm("¿Quieres Eliminar el Producto?"))
                return true;
            else
                return false;
        }
    </script>
}
